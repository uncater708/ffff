local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

wait(5)

local Window = Library:CreateWindow({
    Title = 'Makis Aot:Revoloution Hub',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

-- Values
_G.selectedpart = "Nape"
_G.selectedtransparency = 0.50
_G.selectedsize = 100
_G.Titanbox = false
_G.TitanboxColor = nil
_G.TitanboxColorOutline = nil
_G.Blockyloaded = false
_G.AutoFarm = false
_G.AutoRaid = false
_G.selectedspeed = 350
_G.selectedUp = 200
_G.selectedspeedraid = 350
_G.selectedUpraid = 200
_G.autoretry = false
_G.AutoFarmOp = false
_G.noclip = false


local remote = game:GetService("ReplicatedStorage"):FindFirstChild("YourRemoteEventName")
local offset = Vector2.new(0, 0)
local hasFired = false
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hum = character:FindFirstChild("HumanoidRootPart")
local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST")

-- Functions
function HitboxExpander()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hum = character:FindFirstChild("HumanoidRootPart")

    for _, titan in ipairs(workspace.Titans:GetDescendants()) do
        if titan:IsA("Model") then
            local hitboxes = titan:FindFirstChild("Hitboxes")
            if hitboxes then
                local hit = hitboxes:FindFirstChild("Hit")
                if hit then 
                    local nape = hit:FindFirstChild(_G.selectedpart)
                    if nape then
                        nape.Transparency = _G.selectedtransparency
                        nape.Size = Vector3.new(_G.selectedsize, _G.selectedsize, _G.selectedsize)
                    end
                end
            end
        end
    end
end

function ResetChar()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hum = character:FindFirstChild("Humanoid")
    hum.Health = 0
end

function RemoveInjuris()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local injuries = character:FindFirstChild("Injuries")

    if injuries then
        injuries:Destroy()
    end
end

function AutoRetank()

    function AutoReloadBlades()
        local player = game:GetService("Players").LocalPlayer
        local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST")
        local offsetBar = player.PlayerGui.Interface.HUD.Main.Top.Blades.Sets  -- GUI Object, not text
        local hasFired = false
    
        offsetBar:GetPropertyChangedSignal("Text"):Connect(function()
            local currentOffset = offsetBar.Text  -- Get updated text
    
            -- Ensure GasTanks exist before sending request
            local gasTank = workspace:FindFirstChild("Unclimbable") 
                and workspace.Unclimbable:FindFirstChild("Reloads") 
                and workspace.Unclimbable.Reloads:FindFirstChild("GasTanks") 
                and workspace.Unclimbable.Reloads.GasTanks:FindFirstChild("Refill")
    
            if currentOffset == "0 / 3" and not hasFired and gasTank then
                local args = {"Blades", "Full_Reload", "Left", gasTank}
                remote:FireServer(unpack(args))
                hasFired = true
            elseif currentOffset == "2 / 3" or currentOffset == "3 / 3" then
                hasFired = false
            end
        end)
    end
    
    AutoReloadBlades()
    

end

function tptitans()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local hum = character:FindFirstChild("HumanoidRootPart")

    for _, titan in ipairs(workspace.Titans:GetDescendants()) do
        if titan:IsA("Model") then
            local hitboxes = titan:FindFirstChild("Hitboxes")
            if hitboxes then
                local hit = hitboxes:FindFirstChild("Hit")
                if hit then 
                    local nape = hit:FindFirstChild("Nape")
                    if nape then
                        nape.CFrame = hum.CFrame
                        nape.Anchored = true
                    end
                end
            end
        end
    end
end

function BlockyTitans()
    if _G.Blockyloaded == false then
        for _, titan in ipairs(workspace.Titans:GetChildren()) do
            if titan:IsA("Model") then
                local fake = titan:FindFirstChild("Fake")
                if fake and fake:IsA("Model") then
                    for _, part in ipairs(fake:GetDescendants()) do
                        if part:IsA("BasePart") and part.Name ~= "Total" and part.Name ~= "RootPart" and part.Name ~= "Collision" then
                            local selection = Instance.new("SelectionBox") 
                            selection.Parent = part
                            selection.Adornee = part
                            selection.Color3 = _G.TitanboxColorOutline
                            selection.LineThickness = 0.1
                            selection.SurfaceColor3 = _G.TitanboxColor
                            selection.SurfaceTransparency = 0
                            selection.Visible = false
                        end
                    end
                end
            end
        end
    end
end

function toggleHighlights()
    for _, titan in ipairs(workspace.Titans:GetChildren()) do
        if titan:IsA("Model") then
            local fake = titan:FindFirstChild("Fake")
            if fake and fake:IsA("Model") then
                for _, subModel in ipairs(fake:GetChildren()) do
                    if subModel then
                        for _, highlight in ipairs(subModel:GetDescendants()) do
                            if highlight:IsA("SelectionBox") then
                                highlight.Visible = _G.Titanbox
                                highlight.Color3 = _G.TitanboxColorOutline
                                highlight.SurfaceColor3 = _G.TitanboxColor
                            end
                        end
                    end
                end
            end
        end
    end
end

function AutoFarmLegit()
    if _G.AutoFarm == true then
        AutoRetank()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local flying, targetCFrame, flightSpeed = false, nil, _G.selectedspeed
        local flyingReached = false  
        local heartbeatConnection = nil  
        local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST")

        local climbable = workspace:FindFirstChild("Climbable")
        if climbable then
            climbable:Destroy()
        end

        local unclimbable = workspace:FindFirstChild("Unclimbable")
        if unclimbable then
            local props = unclimbable:FindFirstChild("Props")
            if props then
                props:Destroy()
            end
        end

        local function startFlyingToCFrame(target, speed)
            flying, targetCFrame, flightSpeed = true, target, speed
            flyingReached = false  
        end

        local function stopFlying()
            flying, targetCFrame = false, nil
            rootPart.Velocity = Vector3.new(0, 0, 0)
        end

        local function fireAttack()
            local args = {"Attacks", "Slash", true}
            for attempt = 1, 3 do
                local success, err = pcall(function()
                    remote:FireServer(unpack(args))
                end)
                if success then
                    break
                else
                    wait(0.2)
                end
            end
        end

        local function registerAndAttackTitan(titan)
            local success, err = pcall(function()
                local hitboxPath = titan:FindFirstChild("Hitboxes") and 
                                   titan.Hitboxes:FindFirstChild("Hit") and 
                                   titan.Hitboxes.Hit:FindFirstChild("Nape")

                if hitboxPath then
                    fireAttack()
                    wait(0.1)

                    local args = {"Hitboxes", "Register", hitboxPath, 384.37, 0.41}
                    remote:FireServer(unpack(args))

                    wait(0.1)
                    fireAttack()
                end
            end)
        end

        if heartbeatConnection then
            heartbeatConnection:Disconnect()
        end

        heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if _G.AutoFarm == false then
                stopFlying()
                heartbeatConnection:Disconnect()
                heartbeatConnection = nil  
                return
            end

            if flying and targetCFrame then
                local direction = (targetCFrame.Position - rootPart.Position).unit
                local distance = (targetCFrame.Position - rootPart.Position).magnitude
                if distance > 1 then
                    rootPart.Velocity = direction * flightSpeed
                else
                    if not flyingReached then
                        flyingReached = true  
                        for _, titan in ipairs(workspace.Titans:GetChildren()) do
                            if titan:IsA("Model") then
                                local nape = titan:FindFirstChild("Hitboxes") and 
                                             titan.Hitboxes:FindFirstChild("Hit") and 
                                             titan.Hitboxes.Hit:FindFirstChild("Nape")

                                if nape then
                                    registerAndAttackTitan(titan)

                                    local waitTime = 0
                                    while nape and nape.CanTouch and waitTime < 3 do
                                        wait(0.1)
                                        waitTime = waitTime + 0.1
                                    end

                                    if nape and not nape.CanTouch then
                                        nape:Destroy()  
                                        stopFlying()
                                        wait(1)  
                                    end
                                    break  
                                end
                            end
                        end
                    end
                end
            end
        end)

        while _G.AutoFarm do
            local foundTitan = false
            for _, titan in ipairs(workspace.Titans:GetChildren()) do
                if titan:IsA("Model") then
                    local nape = titan:FindFirstChild("Hitboxes") and 
                                 titan.Hitboxes:FindFirstChild("Hit") and 
                                 titan.Hitboxes.Hit:FindFirstChild("Nape")

                    if nape then
                        foundTitan = true  
                        local targetPosition = nape.Position + Vector3.new(0, _G.selectedUp, 0)
                        startFlyingToCFrame(CFrame.new(targetPosition), _G.selectedspeed)
                        wait(1)
                        break  
                    end
                end
            end

            if not foundTitan then
                wait(3)
            end
        end

        stopFlying()
    end
end

function RaidAutoFarmLegit()
    if _G.AutoRaid == true then
        AutoRetank()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local flying, targetCFrame, flightSpeed = false, nil, _G.selectedspeed
        local flyingReached = false  
        local heartbeatConnection = nil  
        local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST")


        local function startFlyingToCFrame(target, speed)
            flying, targetCFrame, flightSpeed = true, target, speed
            flyingReached = false  
        end

        local function stopFlying()
            flying, targetCFrame = false, nil
            rootPart.Velocity = Vector3.new(0, 0, 0)
        end

        local function fireAttack()
            local args = {"Attacks", "Slash", true}
            for attempt = 1, 3 do
                local success, err = pcall(function()
                    remote:FireServer(unpack(args))
                end)
                if success then
                    break
                else
                    wait(0.2)
                end
            end
        end

        local function registerAndAttackTitan(titan)
            local success, err = pcall(function()
                local hitboxPath = titan:FindFirstChild("Hitboxes") and 
                                   titan.Hitboxes:FindFirstChild("Hit") and 
                                   titan.Hitboxes.Hit:FindFirstChild("Nape")

                if hitboxPath then
                    fireAttack()
                    wait(0.1)

                    local args = {"Hitboxes", "Register", hitboxPath, 384.37, 0.41}
                    remote:FireServer(unpack(args))

                    wait(0.1)
                    fireAttack()
                end
            end)
        end

        if heartbeatConnection then
            heartbeatConnection:Disconnect()
        end

        heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if _G.AutoRaid == false then
                stopFlying()
                heartbeatConnection:Disconnect()
                heartbeatConnection = nil  
                return
            end

            if flying and targetCFrame then
                local direction = (targetCFrame.Position - rootPart.Position).unit
                local distance = (targetCFrame.Position - rootPart.Position).magnitude
                if distance > 1 then
                    rootPart.Velocity = direction * flightSpeed
                else
                    if not flyingReached then
                        flyingReached = true  
                        for _, titan in ipairs(workspace.Titans:GetChildren()) do
                            if titan:IsA("Model") then
                                local nape = titan:FindFirstChild("Hitboxes") and 
                                             titan.Hitboxes:FindFirstChild("Hit") and 
                                             titan.Hitboxes.Hit:FindFirstChild("Nape")

                                if nape then
                                    registerAndAttackTitan(titan)

                                    local waitTime = 0
                                    while nape and nape.CanTouch and waitTime < 3 do
                                        wait(0.1)
                                        waitTime = waitTime + 0.1
                                    end

                                    if nape and not nape.CanTouch then
                                        nape:Destroy()  
                                        stopFlying()
                                        wait(1)  
                                    end
                                    break  
                                end
                            end
                        end
                    end
                end
            end
        end)

        while _G.AutoRaid do
            local foundTitan = false
            for _, titan in ipairs(workspace.Titans:GetChildren()) do
                if titan:IsA("Model") then
                    local nape = titan:FindFirstChild("Hitboxes") and 
                                 titan.Hitboxes:FindFirstChild("Hit") and 
                                 titan.Hitboxes.Hit:FindFirstChild("Nape")

                    if nape then
                        foundTitan = true  
                        local targetPosition = nape.Position + Vector3.new(0, _G.selectedUpraid, 0)
                        startFlyingToCFrame(CFrame.new(targetPosition), _G.selectedspeedraid)
                        wait(1)
                        break  
                    end
                end
            end

            if not foundTitan then
                wait(3)
            end
        end

        stopFlying()
    end
end

function AutoReloadBlades()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("GET")
    local offsetBar = player.PlayerGui.Interface.HUD.Main.Top.Blades.Inner.Bar.Gradient
    local hasFired = false

    offsetBar:GetPropertyChangedSignal("Offset"):Connect(function()
        local currentOffset = offsetBar.Offset.X
        if currentOffset <= -0.15 and not hasFired then
            remote:InvokeServer("Blades", "Reload")
            hasFired = true
        elseif currentOffset > -0.15 then
            hasFired = false
        end
    end)
end

function restart()
    local args = {
        "Functions",
        "Retry",
        "Add"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("GET"):InvokeServer(unpack(args))
end

function Backtomenu()
    local args = {
        "Functions",
        "Teleport"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("GET"):InvokeServer(unpack(args))
end

function EscapeBite()
    local yea = game:GetService("Players").LocalPlayer.PlayerGui.Interface.Buttons

    local args = {
        "Attacks",
        "Slash_Escape"
    }
    
    -- Prüfen, ob yea aktiv ist
    while true do
    if yea.Visible == true then 
        game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST"):FireServer(unpack(args))
    end
    yea.Visible = false
    wait(0.1)
    end
end


function AutoRetry()
    local player = game:GetService("Players").LocalPlayer
    local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("GET")
    local retryButton = player.PlayerGui:WaitForChild("Interface")
        :WaitForChild("Rewards")
        :WaitForChild("Main")
        :WaitForChild("Info")
        :WaitForChild("Main")
        :WaitForChild("Buttons")
        :WaitForChild("Retry")
        :FindFirstChild("Title")  -- Prevents errors if missing

    -- Ensure retryButton exists
    if not retryButton then
        warn("Retry button not found! AutoReloadBlades will not work.")
        return
    end

    local hasFired = false

    retryButton:GetPropertyChangedSignal("Text"):Connect(function()
        local currentOffset = retryButton.Text  -- Fetch updated text

        if (currentOffset == "RETRY (0/1)" or currentOffset == "RETRY (0/2)" or 
            currentOffset == "RETRY (0/3)" or currentOffset == "RETRY (0/4)" or 
            currentOffset == "RETRY (0/5)") and not hasFired then
            
            local args = {"Functions", "Retry", "Add"}
            remote:InvokeServer(unpack(args))  -- Change to `InvokeServer` if needed
            hasFired = true
        elseif currentOffset == "RETRY (0/0)" then
            hasFired = false
        end
    end)
end






local function RapeTitans()
    -- Check if AutoFarmOp is true to start the loop
    while _G.AutoFarmOp do
        AutoRetank()
        AutoReloadBlades()

        -- Loop through all the Titans in the workspace
        for _, titan in ipairs(workspace.Titans:GetDescendants()) do
            if titan:IsA("Model") then
                local hitboxes = titan:FindFirstChild("Hitboxes")
                if hitboxes then
                    local hit = hitboxes:FindFirstChild("Hit")
                    if hit then
                        local nape = hit:FindFirstChild("Nape")
                        if nape then
                            local hitboxPath = nape

                            -- Safely make the remote call using pcall
                            local success, err = pcall(function()
                                remote:FireServer("Attacks", "Slash", true)
                                remote:FireServer("Hitboxes", "Register", hitboxPath, 384.37, 0.41)
                                remote:FireServer("Attacks", "Slash", false)
                            end)

                            if not success then
                                warn("Error while firing remote: " .. err)
                            end
                        end
                    end
                end
            end
        end

        -- Wait for a short interval to prevent freezing
        wait(0.1)  -- Adjust this delay as needed to reduce resource consumption
    end
end








function Ripall()
    
    local player = game.Players.LocalPlayer -- Replace with the target player if needed
    local character = player.Character or player.CharacterAdded:Wait() -- Get the player's character
    local hum = character:FindFirstChild("HumanoidRootPart")
    local remote = game:GetService("ReplicatedStorage"):WaitForChild("Assets"):WaitForChild("Remotes"):WaitForChild("POST")

    while true do
        for _, titan in ipairs(workspace.Titans:GetDescendants()) do
            if titan:IsA("Model") then
                local hitboxes = titan:FindFirstChild("Hitboxes")
                if hitboxes then
                    local hit = hitboxes:FindFirstChild("Hit")
                    if hit then 
                        local nape = hit:FindFirstChild("Nape")
                            if nape then
                            nape.Anchored = true
                            nape.CFrame = hum.CFrame
                            nape.CFrame = hum.CFrame

                        local args1 = {"S_Skills", "Usage", "108", false}
                        remote:FireServer(unpack(args1))
                        
                    end
                end
            end
            
            end
        end
        wait(0.1)
    end


end

function deletebuilding()

    local climbable = workspace:FindFirstChild("Climbable")
    if climbable then
        climbable:Destroy()
    end

    local unclimbable = workspace:FindFirstChild("Unclimbable")
    if unclimbable then
        local props = unclimbable:FindFirstChild("Props")
        if props then
            props:Destroy()
        end
    end

end

function noclip()

        local RunService = game:GetService("RunService")
        local Players = game:GetService("Players")

        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

       

        RunService.Stepped:Connect(function()
            if _G.noclip then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            else
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
        end)

 


end

local Tabs = {
    Main = Window:AddTab('Main'), 
    Visual = Window:AddTab('Visual'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Main')
local RightGroupBox = Tabs.Main:AddRightGroupbox('Main')
local RightGroupBoxRipper = Tabs.Main:AddRightGroupbox('Op Shit')
local LeftGroupBoxVisual = Tabs.Visual:AddLeftGroupbox('Blocky Titans')
local LeftGroupBoxunder = Tabs.Main:AddLeftGroupbox('Auto Farm Legit')
local LeftGroupBoxunderRaid = Tabs.Main:AddLeftGroupbox('Auto Raid Legit')

local MyButton = RightGroupBoxRipper:AddButton({
    Text = 'Rip All Titans',
    Func = function()
        Ripall()
    end,
    DoubleClick = false,
    Tooltip = 'Use At Own Risk'
})

RightGroupBoxRipper:AddToggle('KillAura', {
    Text = 'Kill Aura',
    Default = false,
    Tooltip = 'Toggle Kill Aura',
    Callback = function(Value)

    _G.AutoFarmOp = Value
    RapeTitans()

    end
})


LeftGroupBox:AddDropdown('MyDropdown', {
    Values = { 'Nape', 'Eyes', 'LeftArm', 'RightArm', 'RightLeg', 'LeftLeg'  },
    Default = "Nape",
    Multi = false,
    Text = 'Select Hitbox Part',
    Tooltip = 'Select the Part for Hitbox expander',
    Callback = function(Value)
        _G.selectedpart = Value
    end
})

LeftGroupBox:AddDropdown('MyDropdown', {
    Values = { 1, 0.75, 0.50, 0.25, 0 },
    Default = 0.5,
    Multi = false,
    Text = 'Select Hitbox transparency',
    Tooltip = 'Select the transparency for Hitbox expander',
    Callback = function(Value)
        _G.selectedtransparency = Value
    end
})

LeftGroupBox:AddInput('MyTextbox', {
    Default = 'Change the Size',
    Numeric = true,
    Finished = false,
    Text = 'Change Hitbox Size',
    Tooltip = 'Select the Size of the Hitbox',
    Placeholder = 'Size',
    Callback = function(Value)
        _G.selectedsize = Value
    end
})

local MyButton = LeftGroupBox:AddButton({
    Text = 'Expand Hitbox',
    Func = function()
        HitboxExpander()
    end,
    DoubleClick = false,
    Tooltip = 'This Expands the Hitbox of the Titans Part you selected'
})

local MyButton = RightGroupBox:AddButton({
    Text = 'No Injuries',
    Func = function()
        RemoveInjuris()
    end,
    DoubleClick = false,
    Tooltip = 'This Deletes the Injuries you stil get DMG but no Injuries'
})

local MyButton = RightGroupBox:AddButton({
    Text = 'Reset Character',
    Func = function()
        ResetChar()
    end,
    DoubleClick = false,
    Tooltip = 'This Kills you'
})

local MyButton = RightGroupBox:AddButton({
    Text = 'Force Retry',
    Func = function()
        restart()
    end,
    DoubleClick = false,
    Tooltip = 'This Retrys'
})

local MyButton = RightGroupBox:AddButton({
    Text = 'Force Menu',
    Func = function()
        Backtomenu()
    end,
    DoubleClick = false,
    Tooltip = 'This goes to Menu'
})

local MyButton = RightGroupBox:AddButton({
    Text = 'Escape Bites',
    Func = function()
        EscapeBite()
    end,
    DoubleClick = false,
    Tooltip = 'This Escapes Bites Etc'
})


LeftGroupBoxunder:AddInput('MyTextbox', {
    Default = 'Change the Speed',
    Numeric = true,
    Finished = false,
    Text = 'Change Auto Farm Speed',
    Tooltip = 'I Would Recomdend 350, 400, or 500 Default is 350',
    Placeholder = 'Size',
    Callback = function(Value)
        _G.selectedspeed = Value
    end
})

LeftGroupBoxunder:AddInput('MyTextbox', {
    Default = 'Change the Height',
    Numeric = true,
    Finished = false,
    Text = 'Change Auto Farm Height',
    Tooltip = 'I Would Recomdend 150 Default is 150',
    Placeholder = 'Size',
    Callback = function(Value)
        _G.selectedUp = Value
    end
})

LeftGroupBoxunder:AddToggle('AutoFarmLegit', {
    Text = 'Auto Farm',
    Default = false,
    Tooltip = 'Enable Auto Farm',
    Callback = function(Value)
        _G.AutoFarm = Value
        AutoFarmLegit()  
    end
})

LeftGroupBoxunder:AddToggle('NoClip', {
    Text = 'No Clip',
    Default = false,
    Tooltip = 'Enable No Clip',
    Callback = function(Value)
        _G.noclip = Value
        noclip() 
    end
})

LeftGroupBoxunder:AddToggle('AutoMissionOP', {
    Text = 'Fast Mission With Auto Farm',
    Default = false,
    Tooltip = 'Enable Fast Mission USE WITH Auto Farm',
    Callback = function(Value)

    _G.AutoFarmOp = Value
    RapeTitans()

    end
})



LeftGroupBoxunder:AddToggle('AutoReloadBlades', {
    Text = 'Auto Reload Blades',
    Default = false,
    Tooltip = 'Auto Reload Blades',
    Callback = function(Value)
        
        AutoReloadBlades()

    end
})

LeftGroupBoxunder:AddToggle('AutoRetry', {
    Text = 'Auto Retry',
    Default = false,
    Tooltip = 'Auto Retrys after end',
    Callback = function(Value)
        _G.autoretry = Value
        AutoRetry()
    end
})


LeftGroupBoxunderRaid:AddInput('MyTextbox', {
    Default = 'Change the Speed',
    Numeric = true,
    Finished = false,
    Text = 'Change Auto Raid Speed',
    Tooltip = 'I Would Recomdend 350, 400, or 500 Default is 350',
    Placeholder = 'Size',
    Callback = function(Value)
        _G.selectedspeedraid = Value
    end
})

LeftGroupBoxunderRaid:AddInput('MyTextbox', {
    Default = 'Change the Height',
    Numeric = true,
    Finished = false,
    Text = 'Change Auto Raid Height',
    Tooltip = 'I Would Recomdend 150 Default is 200',
    Placeholder = 'Size',
    Callback = function(Value)
        _G.selectedUpraid = Value
    end
})

LeftGroupBoxunderRaid:AddToggle('AutoRaid', {
    Text = 'RaidFarm Legit',
    Default = false,
    Tooltip = 'Auto Reload Blades',
    Callback = function(Value)

    _G.AutoRaid = Value
    RaidAutoFarmLegit()

    end
})

LeftGroupBoxunderRaid:AddToggle('RapeRaid', {
    Text = 'OP Raid With RaidFarm',
    Default = false,
    Tooltip = 'Auto Reload Blades',
    Callback = function(Value)

        _G.AutoFarmOp = Value
        RapeTitans()

    end
})

LeftGroupBoxVisual:AddLabel('Fill Color'):AddColorPicker('Fill COlor', {
    Default = Color3.new(0.000000, 1.000000, 0.000000),
    Title = 'Blocky Titan Color',
    Transparency = 0,
    Callback = function(Value)
        _G.TitanboxColor = Value
    end
})

LeftGroupBoxVisual:AddLabel('Outline Color'):AddColorPicker('Outline Color', {
    Default = Color3.new(1.000000, 0.000000, 0.000000),
    Title = 'Blocky Titan Outline Color',
    Transparency = 0,
    Callback = function(Value)
        _G.TitanboxColorOutline = Value
    end
})

local MyButton = LeftGroupBoxVisual:AddButton({
    Text = 'Preload Blocky Titans',
    Func = function()
        BlockyTitans()
        _G.Blockyloaded = true
    end,
    DoubleClick = false,
    Tooltip = 'This Kills you'
})

LeftGroupBoxVisual:AddToggle('MyToggle', {
    Text = 'Blocky Titans',
    Default = false,
    Tooltip = 'Enable Blocky Titans',
    Callback = function(Value)
        _G.Titanbox = Value
        toggleHighlights()        
    end
})


local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind
MenuGroup:AddButton('Unload', function() Library:Unload() end)
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
ThemeManager:SetFolder('MakisAot')
SaveManager:SetFolder('MakisAot')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
